-- === Services & Constants ===
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

local AUTO_CLICK_INTERVAL = 0.1
local MAX_CHASE_DISTANCE = 1000
local SLAPBOT_WALK_SPEED = 100
local AVOID_POS = Vector3.new(-271, -6.65, 1)
local AVOID_RADIUS = 50
local CUBE_POS = Vector3.new(-271, -6.65, 1)
local CUBE_AVOID_RADIUS = 15

-- === State ===
local slapBotEnabled = false
local antiVoidEnabled = false
local antiVoidPart = nil

-- === GUI Setup ===
local gui = Instance.new("ScreenGui")
gui.Name = "SlapBotGUI"
gui.ResetOnSpawn = false
gui.Parent = PlayerGui

local slapToggle = Instance.new("TextButton")
slapToggle.Text = "Slap Bot: OFF"
slapToggle.Size = UDim2.new(0, 160, 0, 40)
slapToggle.Position = UDim2.new(0, 10, 1, -50)
slapToggle.TextScaled = true
slapToggle.Font = Enum.Font.SourceSansBold
slapToggle.BackgroundColor3 = Color3.fromRGB(70,70,70)
slapToggle.TextColor3 = Color3.new(1,1,1)
slapToggle.Parent = gui
Instance.new("UICorner", slapToggle).CornerRadius = UDim.new(0,8)

local antiToggle = Instance.new("TextButton")
antiToggle.Text = "Anti-Void: OFF"
antiToggle.Size = UDim2.new(0, 200, 0, 45)
antiToggle.Position = UDim2.new(0, 30, 0, 30)
antiToggle.TextScaled = true
antiToggle.Font = Enum.Font.SourceSansBold
antiToggle.BackgroundColor3 = Color3.fromRGB(70,70,70)
antiToggle.TextColor3 = Color3.new(1,1,1)
antiToggle.Parent = gui
Instance.new("UICorner", antiToggle).CornerRadius = UDim.new(0,8)

-- === Anti-Void Logic ===
local function createAntiVoid()
	local hrp = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
	if not hrp then return end
	antiVoidPart = Instance.new("Part")
	antiVoidPart.Name = "AntiVoidFloor"
	antiVoidPart.Size = Vector3.new(1e6, 0.1, 1e6)
	antiVoidPart.CFrame = CFrame.new(hrp.Position.X, hrp.Position.Y - 2, hrp.Position.Z)
	antiVoidPart.Anchored = true
	antiVoidPart.CanCollide = true
	antiVoidPart.Transparency = 0.5
	antiVoidPart.Material = Enum.Material.SmoothPlastic
	antiVoidPart.Parent = workspace
end

local function removeAntiVoid()
	if antiVoidPart then
		antiVoidPart:Destroy()
		antiVoidPart = nil
	end
end

antiToggle.MouseButton1Click:Connect(function()
	antiVoidEnabled = not antiVoidEnabled
	if antiVoidEnabled then
		antiToggle.Text = "Anti-Void: ON"
		antiToggle.BackgroundColor3 = Color3.fromRGB(0,170,0)
		createAntiVoid()
	else
		antiToggle.Text = "Anti-Void: OFF"
		antiToggle.BackgroundColor3 = Color3.fromRGB(70,70,70)
		removeAntiVoid()
	end
end)

-- === Spectator Tool Detection ===
local function playerHasTool(player, toolName)
	return (player.Backpack:FindFirstChild(toolName)
		or (player.Character and player.Character:FindFirstChild(toolName))) ~= nil
end

-- === Find Closest Valid Player ===
local function getClosestPlayer()
	local myHRP = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
	if not myHRP then return nil end
	local closest, shortest = nil, math.huge
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= LocalPlayer and not playerHasTool(plr, "Spectator") then
			local hrp = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
			if hrp then
				local dist = (myHRP.Position - hrp.Position).Magnitude
				local yDiff = math.abs(myHRP.Position.Y - hrp.Position.Y)
				local cubeDist = (hrp.Position - CUBE_POS).Magnitude
				local avoidDist = (hrp.Position - AVOID_POS).Magnitude

				if cubeDist > CUBE_AVOID_RADIUS and avoidDist > AVOID_RADIUS and dist < shortest and dist <= MAX_CHASE_DISTANCE and yDiff <= 3 then
					closest, shortest = plr, dist
				end
			end
		end
	end
	return closest
end

-- === Main Loop Handler ===
local function runSlapLogic()
	local char = LocalPlayer.Character
	if not char then return end
	local hrp = char:FindFirstChild("HumanoidRootPart")
	local humanoid = char:FindFirstChildOfClass("Humanoid")
	if not hrp or not humanoid then return end

	-- Danger avoidance
	if (hrp.Position - AVOID_POS).Magnitude < AVOID_RADIUS then
		local dir = (hrp.Position - AVOID_POS).Unit
		hrp.Velocity = dir * SLAPBOT_WALK_SPEED
		return
	end

	-- Chase logic
	local target = getClosestPlayer()
	if target then
		local thrp = target.Character and target.Character:FindFirstChild("HumanoidRootPart")
		if thrp then
			local dir = (thrp.Position - hrp.Position).Unit
			hrp.Velocity = dir * SLAPBOT_WALK_SPEED
		end
	end
end

-- === Start & Stop Logic ===
local function startSlapBot()
	slapBotEnabled = true
	slapToggle.Text = "Slap Bot: ON"
	slapToggle.BackgroundColor3 = Color3.fromRGB(0,170,0)
	RunService:BindToRenderStep("SlapBotLoop", Enum.RenderPriority.Character.Value, runSlapLogic)

	-- Auto-click task
	spawn(function()
		while slapBotEnabled do
			local tool = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool")
			if tool then
				pcall(tool.Activate, tool)
			end
			task.wait(AUTO_CLICK_INTERVAL)
		end
	end)
end

local function stopSlapBot()
	slapBotEnabled = false
	slapToggle.Text = "Slap Bot: OFF"
	slapToggle.BackgroundColor3 = Color3.fromRGB(70,70,70)
	RunService:UnbindFromRenderStep("SlapBotLoop")
end

slapToggle.MouseButton1Click:Connect(function()
	if slapBotEnabled then stopSlapBot() else startSlapBot() end
end)
